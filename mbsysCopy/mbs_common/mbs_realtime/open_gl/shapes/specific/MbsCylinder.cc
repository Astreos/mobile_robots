#include "MbsCylinder.hh"

namespace OpenGLMbs{

#define NB_VERTICES_INIT 64   ///< initial number of vertices
#define NB_TRIANGLES_INIT 124 ///< initial number of triangles

// temporary vertices
GLfloat tmp_vert_cylinder[3*NB_VERTICES_INIT] = {
     0.000000, -1.0, -1.000000,
     0.000000,  1.0, -1.000000,
     0.195090, -1.0, -0.980785,
     0.195090,  1.0, -0.980785,
     0.382683, -1.0, -0.923880,
     0.382683,  1.0, -0.923880,
     0.555570, -1.0, -0.831470,
     0.555570,  1.0, -0.831470,
     0.707107, -1.0, -0.707107,
     0.707107,  1.0, -0.707107,
     0.831470, -1.0, -0.555570,
     0.831470,  1.0, -0.555570,
     0.923880, -1.0, -0.382683,
     0.923880,  1.0, -0.382683,
     0.980785, -1.0, -0.195090,
     0.980785,  1.0, -0.195090,
     1.000000, -1.0, -0.000000,
     1.000000,  1.0, -0.000000,
     0.980785, -1.0,  0.195090,
     0.980785,  1.0,  0.195090,
     0.923880, -1.0,  0.382683,
     0.923880,  1.0,  0.382683,
     0.831470, -1.0,  0.555570,
     0.831470,  1.0,  0.555570,
     0.707107, -1.0,  0.707107,
     0.707107,  1.0,  0.707107,
     0.555570, -1.0,  0.831470,
     0.555570,  1.0,  0.831470,
     0.382683, -1.0,  0.923880,
     0.382683,  1.0,  0.923880,
     0.195090, -1.0,  0.980785,
     0.195090,  1.0,  0.980785,
    -0.000000, -1.0,  1.000000,
    -0.000000,  1.0,  1.000000,
    -0.195091, -1.0,  0.980785,
    -0.195091,  1.0,  0.980785,
    -0.382684, -1.0,  0.923879,
    -0.382684,  1.0,  0.923879,
    -0.555571, -1.0,  0.831469,
    -0.555571,  1.0,  0.831469,
    -0.707107, -1.0,  0.707106,
    -0.707107,  1.0,  0.707106,
    -0.831470, -1.0,  0.555570,
    -0.831470,  1.0,  0.555570,
    -0.923880, -1.0,  0.382683,
    -0.923880,  1.0,  0.382683,
    -0.980785, -1.0,  0.195089,
    -0.980785,  1.0,  0.195089,
    -1.000000, -1.0, -0.000001,
    -1.000000,  1.0, -0.000001,
    -0.980785, -1.0, -0.195091,
    -0.980785,  1.0, -0.195091,
    -0.923879, -1.0, -0.382684,
    -0.923879,  1.0, -0.382684,
    -0.831469, -1.0, -0.555571,
    -0.831469,  1.0, -0.555571,
    -0.707106, -1.0, -0.707108,
    -0.707106,  1.0, -0.707108,
    -0.555569, -1.0, -0.831470,
    -0.555569,  1.0, -0.831470,
    -0.382682, -1.0, -0.923880,
    -0.382682,  1.0, -0.923880,
    -0.195089, -1.0, -0.980786,
    -0.195089,  1.0, -0.980786
};

// temporary coordinates
GLfloat tmp_coord_cylinder[3*NB_TRIANGLES_INIT] = {
    1, 2, 3,
    3, 4, 5,
    5, 6, 7,
    7, 8, 9,
    9, 10, 11,
    11, 12, 13,
    13, 14, 15,
    15, 16, 17,
    17, 18, 19,
    19, 20, 21,
    21, 22, 23,
    23, 24, 25,
    25, 26, 27,
    27, 28, 29,
    29, 30, 31,
    31, 32, 33,
    33, 34, 35,
    35, 36, 37,
    37, 38, 39,
    39, 40, 41,
    41, 42, 43,
    43, 44, 45,
    45, 46, 47,
    47, 48, 49,
    49, 50, 51,
    51, 52, 53,
    53, 54, 55,
    55, 56, 57,
    57, 58, 59,
    59, 60, 61,
    4, 2, 6,
    63, 64,  1,
    61, 62, 63,
    1, 3, 63,
    2, 4, 3,
    4, 6, 5,
    6, 8, 7,
    8, 10, 9,
    10, 12, 11,
    12, 14, 13,
    14, 16, 15,
    16, 18, 17,
    18, 20, 19,
    20, 22, 21,
    22, 24, 23,
    24, 26, 25,
    26, 28, 27,
    28, 30, 29,
    30, 32, 31,
    32, 34, 33,
    34, 36, 35,
    36, 38, 37,
    38, 40, 39,
    40, 42, 41,
    42, 44, 43,
    44, 46, 45,
    46, 48, 47,
    48, 50, 49,
    50, 52, 51,
    52, 54, 53,
    54, 56, 55,
    56, 58, 57,
    58, 60, 59,
    60, 62, 61,
    2, 64, 6,
    64, 62, 6,
    62, 60, 6,
    60, 58, 6,
    58, 56, 6,
    56, 54, 6,
    54, 52, 6,
    52, 50, 6,
    50, 48, 6,
    48, 46, 6,
    46, 44, 6,
    44, 42, 6,
    42, 40, 6,
    38, 36, 34,
    38, 34, 32,
    40, 38, 32,
    6, 40, 32,
    28, 32, 30,
    26, 32, 28,
    24, 32, 26,
    22, 32, 24,
    20, 32, 22,
    10, 14, 12,
    10, 16, 14,
    18, 32, 20,
    16, 32, 18,
    10, 32, 16,
    8, 6, 32,
    10, 8, 32,
    64, 2,  1,
    62, 64, 63,
    3, 5, 63,
    5, 7, 63,
    7, 9, 63,
    9, 11, 63,
    11, 13, 63,
    13, 15, 63,
    15, 17, 63,
    17, 19, 63,
    19, 21, 63,
    21, 23, 63,
    23, 25, 63,
    53, 49, 51,
    25, 27, 29,
    63, 25, 29,
    35, 31, 33,
    35, 29, 31,
    63, 29, 35,
    41, 37, 39,
    41, 35, 37,
    63, 35, 41,
    47, 43, 45,
    61, 63, 41,
    53, 47, 49,
    53, 43, 47,
    59, 61, 41,
    57, 59, 41,
    55, 57, 41,
    53, 55, 43,
    55, 41, 43
};

/*! \brief constructor
 *
 * \param[in] r radius [m]
 * \param[in] h height [m]
 * \param[in] color color of the shape
 * \param[in] vertex_file vertex shader file to load (with path)
 * \param[in] fragment_file fragment shader file to load (with path)
 * \param[in] world_3d 3D world
 * \param[in] transparency transparency value
 * \param[in] trans_pos position transformation to apply
 * \param[in] trans_scale scaling transformation to apply
 * \param[in] trans_rot rotation transformation to apply
 * \param[in] name name of the shape
 */
MbsCylinder::MbsCylinder(double r, double h, glm::vec3 const& color,
    std::string vertex_file, std::string fragment_file, MbsWorld3D *world_3d,
    float transparency, glm::vec3 const& trans_pos, glm::vec3 const& trans_scale, glm::vec3 const& trans_rot,
    const char* name):
    MbsShape3D(vertex_file, fragment_file, world_3d, transparency, trans_pos, trans_scale, trans_rot, name)
{
    double semi_h;

    this->r = r;
    this->h = h;

    semi_h = h / 2.0;

    BasicLoad(tmp_vert_cylinder, tmp_coord_cylinder, NB_TRIANGLES_INIT, NB_VERTICES_INIT, color);

    // apply radius, height
    for(unsigned int i=0; i<temp_vertices.size(); i++)
    {
        temp_vertices[i] = glm::vec3(r * temp_vertices[i][0], semi_h * temp_vertices[i][1], r * temp_vertices[i][2]);
    }

    // set number of triangles
    SetNbTriangles(NB_TRIANGLES_INIT);

    // initialize the shape
    Init();
}

/*! \brief destructor
 */
MbsCylinder::~MbsCylinder()
{

}

}
